--- drivers/video/fbcmap.c
+++ drivers/video/fbcmap.c
@@ -163,18 +163,17 @@ void fb_dealloc_cmap(struct fb_cmap *cmap)
 
 int fb_copy_cmap(const struct fb_cmap *from, struct fb_cmap *to)
 {
-	unsigned int tooff = 0, fromoff = 0;
-	size_t size;
+	int tooff = 0, fromoff = 0;
+	int size;
 
 	if (to->start > from->start)
 		fromoff = to->start - from->start;
 	else
 		tooff = from->start - to->start;
-	if (fromoff >= from->len || tooff >= to->len)
-		return -EINVAL;
-
-	size = min_t(size_t, to->len - tooff, from->len - fromoff);
-	if (size == 0)
+	size = to->len - tooff;
+	if (size > (int) (from->len - fromoff))
+		size = from->len - fromoff;
+	if (size <= 0)
 		return -EINVAL;
 	size *= sizeof(u16);
 
@@ -188,18 +187,17 @@ int fb_copy_cmap(const struct fb_cmap *from, struct fb_cmap *to)
 
 int fb_cmap_to_user(const struct fb_cmap *from, struct fb_cmap_user *to)
 {
-	unsigned int tooff = 0, fromoff = 0;
-	size_t size;
+	int tooff = 0, fromoff = 0;
+	int size;
 
 	if (to->start > from->start)
 		fromoff = to->start - from->start;
 	else
 		tooff = from->start - to->start;
-	if (fromoff >= from->len || tooff >= to->len)
-		return -EINVAL;
-
-	size = min_t(size_t, to->len - tooff, from->len - fromoff);
-	if (size == 0)
+	size = to->len - tooff;
+	if (size > (int) (from->len - fromoff))
+		size = from->len - fromoff;
+	if (size <= 0)
 		return -EINVAL;
 	size *= sizeof(u16);
 
